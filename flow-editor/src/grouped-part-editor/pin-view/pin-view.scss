$PIN_RADIUS: 13px;
$WIRE_LENGTH: 10px;
$PART_PIN_WIDTH: 20px;
$PART_PIN_HEIGHT: 12px;

$MINIMIZED_PIN_SIZE: 14px;
$MINIMIZED_WIRE_LENGTH: 6px;

.pin[data-pin-id="__trigger"].input {
  font-style: italic;
  
  .pin-inner {
    border-radius: 10px;
    // font-size: 11px;
    padding-left: 5px;
    padding-right: 5px;
    background: #fff2d9;
  }
  // color: pink;
}

// .ins-view:not(.force-show-trigger) .base-part-view {

//     // color: orange !important;
//     .pin[data-pin-id="__trigger"]:not(.connected):not(.selected) {
//       // color: orange;
//       display: none !important

//   }
// }

.pin {
  position: relative;
  z-index: 0; // decreased so output pin can be behind part when retracted
  // height: $PIN_TOTAL_HEIGHT;

  display: flex;
  flex-direction: column;
  align-items: center;
  user-select: none;

  &:not(:last-of-type) {
    margin-right: 4px;
  }

  &:not(:first-of-type) {
    margin-left: 4px;
  }

  .wire {
    background: #999999;
    height: 100%;
    width: 1px;
    flex-grow: 1;
    min-height: $WIRE_LENGTH;
  }
  // &:after {
  // 	height: 7px;
  // 	background: white;
  // 	width: 1px;s
  // 	content: '';
  // 	display: block;
  // 	z-index: -1;
  // 	position: relative;
  // }

  .pin-inner {
    // width: $PIN_RADIUS;
    // height: $PIN_RADIUS;
    border-radius: 2px;
    border: 2px solid transparent;
    flex-shrink: 0;
    cursor: pointer;
    // transition: box-shadow 0.3s ease-out;
    will-change: border, box-shadow;
    font-size: 16px;
    font-weight: 600;
    padding: 2px 4px 0px 4px;

    box-shadow: 0px 0px 5px 2px rgba(0, 0, 0, 0.15);
    transition: background-color ease-in-out 0.15s, box-shadow ease-in-out 0.7s;

    white-space: nowrap;

    .suffix {
      color: #595959;
      margin-left: 3px;
      // margin-bottom: 2px;
    }
  }

  &.minimized {

    // begin margins to compensate for the pin size change when minimized
    // &.input .pin-inner {
    //   margin-top: 12px;
    // }

    // &.output .pin-inner {
    //   margin-bottom: 12px;
    // }
    // // end margins to compensate for the pin size change when minimized

    // .pin-inner {
    //   border-radius: 50%;
    //   color: transparent;
    //   padding: 0;
    //   width: $MINIMIZED_PIN_SIZE;
    //   height: $MINIMIZED_PIN_SIZE; 
    // }

    // .wire {
    //   min-height: $MINIMIZED_WIRE_LENGTH;
    // }
  }


  &:hover .pin-inner {
    border: 4px solid#007EC6;
    opacity: 0.85;
  }

  &.selected .pin-inner {
    background-color: #007EC6 !important;
    color: white;
    // opacity: 0.7;
  }

  &.closest .pin-inner {
    border: 2px dashed #007EC6;
  }

  &.input {
    &.rotate {
      flex-direction: column-reverse;
    }

    .pin-inner {
      background: #DEFDFF;
    }

  }


  &.has-value {
    &.output {
      .pin-inner {
        background: #FFE6DE;
        // box-shadow: 0px 0px 4px 0px #4ccfec;
        // transition:f all ease-out 1.5s;
      }

      &.pin[data-pin-id="__error"] {
        .pin-inner {
        background: #ff8f6a;
        }
      }
    }

  }

  &.const-value {
    &.input {

      .pin-inner {
        background: #ddffe4;
        white-space: nowrap;
        // transition: all ease-out 1.5s;
        max-width: 150px;
        text-overflow: ellipsis;
        overflow: hidden;

        .value {
          // font-style: italic;
          font-size: 110%;
        }
      }
    }

    &.env-value {
      .pin-inner {
        background: #f9ffaa;
      }
    }
  }

  &.is-logged {
    .pin-inner {
      border: 3px #4ccfec;
      box-shadow: 0px 0px 4px 0px #4ccfec;
    }
  }

  &.output {
    &:not(.rotate) {
      flex-direction: column-reverse;
    }

    .pin-inner {
      background: #FCF0FF;
    }

    &.closest:not(.selected) .pin-inner {
      background: #FFB7A1;
    }
  }

  &.optional:not(.connected) .pin-inner {
    opacity: 0.7;
  }
}

.display-mode .pin-inner {
  font-size: 8px;
}

@at-root {
  .__react_component_tooltip.insights-tooltip {
    font-size: 14px;
    // min-width: 300px;
  }
}