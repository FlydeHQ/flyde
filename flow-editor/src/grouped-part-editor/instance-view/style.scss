@import  '../../lib/common.scss';

$const-color: #FCF0FF;
$trigger-pin-width: 40px;
$half-of-pin-height: 16px;

.ins-view {
  display: inline-block;
  position: absolute;
  // transform: rotate(45deg);

  .inputs,
  .outputs {
    display: flex;
    width: 100%;
    align-content: space-between;
    align-items: center;
    justify-content: space-around;
  }

  // .inputs {f
  //   padding-right: $trigger-pin-width + 10px;

  //   .pin[data-pin-id="__trigger"] {
  //     position: absolute;
  //     right: 0px;
  //   }
  // }
}


.ins-view {
  transform-origin: top left;
  display: inline-block;
  position: absolute;
  transition: box-shadow ease-in-out 0.15s;
  will-change: transform, width;
  z-index: 1;

  &.display-mode {
    position: initial;
  }

  &.dragged {
    opacity: 0.8;
  }
  
  &.no-inputs {
    padding-top: 15px;
  }
  
  &.no-outputs {
    padding-bottom: 15px;
  }

  .ins-view-inner {
    @include base-part;
  }

  &.inline-part-edited {

    z-index: 2; // otherwise other instances get rendered on top of inline part editor

    > .base-part-view .base-part-view-inner {
      // padding: 0;
      overflow: hidden;
    }
    
    .inline-group-editor-container {
      // width: 400px;
      // height: 300px;
      // max-width: 600px;

      background: #ffffff;
    
      box-shadow: $shadow-a;
      // position: relative;
      
      z-index: 2;
      display: flex;
      flex-direction: column;
      position: relative;
      overflow: hidden;

      > header {
        font-size: 20px;
        font-weight: 600;
        text-align: center;
        padding: 4px 15px 3px;
        cursor: move;
        user-select: none;
        z-index: 1;
      }

      > .grouped-part-editor {
        flex: 1;
        display: flex;
        position: relative;
        overflow: hidden;
      }
    }
    
  }

  .pin {
    transition: transform 0.1s ease-in-out;
  }

  &:not(:hover) {
    &:not(.force-minimized-input) {
      .pin.input.minimized:not(.selected) {
        // the -half of pin thing + scale Y 0 is for the connections to be drawn to the center of the intance
        transform: translateY(calc(100% - #{$half-of-pin-height})) scaleY(0);
      }
    }
  
    &:not(.force-minimized-output) {
      .pin.output.minimized:not(.selected) {
        // the -half of pin thing + scale Y 0 is for the connections to be drawn to the center of the intance
        transform: translateY(calc(-100% + #{$half-of-pin-height})) scaleY(0);
      }
    }
  }


  &[data-part-id="Pick"],
  &[data-part-id="Dot"] {
  
    .ins-view-inner {
      @include custom-part-color(#f2fdff);

      font-size: 18px;
      padding: 2px 8px;
      line-height: 20px;
    }
  }

  &[data-part-id^="Inline Code"],
  &[data-part-id^="Inline-value"] {  
    .ins-view-inner {
      @include custom-part-color(#f7f7f7);
      font-size: 18px;
      padding: 2px 8px;
      line-height: 20px;
      font-weight: 400;
      font-family: monospace;
    }

  }
      // background
    // .ins-view-inner {
      // background: #007EC6;
      // color: white;
    // }
}


